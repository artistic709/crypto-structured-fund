{"version":3,"sources":["contexts/application.js","contexts/transaction.js","utils/apis.js","utils/index.js","assets/loading.svg","components/Web3Manager.js","connectors/NetworkOnlyConnector.js","connectors/InjectedConnector.js","themes/GlobalStyle.js","themes/index.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["BLOCK_NUMBER","UPDATE_BLOCK_NUMBER","applicationContext","createContext","useApplicationContext","useContext","initialState","reducer","state","type","payload","networkId","blockNumber","safeAccess","Error","Provider","children","useReducer","dispatch","updateBlockNumber","useCallback","value","useMemo","Updater","useWeb3Context","library","useEffect","update","eth","getBlockNumber","then","stale","catch","subscription","subscribe","on","unsubscribe","useBlockNumber","RESPONSE","CUSTOM_DATA","BLOCK_NUMBER_CHECKED","RECEIPT","ADD","CHECK","FINALIZE","TransactionsContext","useTransactionsContext","hash","response","receipt","add","check","finalize","globalBlockNumber","allTransactions","Object","keys","filter","forEach","getTransactionReceipt","useTransactionAdder","customData","getGasPrice","a","category","fetch","json","data","gasPrice","BigNumber","div","times","getPriceConvertionRate","symbol","convert","price","quote","object","path","reduce","accumulator","currentValue","isAddress","address","web3Utils","shortenAddress","digits","substring","getContract","abi","from","ethers","constants","AddressZero","Contract","amountFormatter","amount","baseDecimals","displayDecimals","isBigNumber","isZero","pow","toFixed","dateFormatter","timestamp","Date","toLocaleString","undefined","hour12","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","cx","cy","fill","strokeLinecap","r","strokeWidth","stroke","strokeDasharray","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","_ref","svgRef","title","props","width","height","viewBox","preserveAspectRatio","className","style","backgroundImage","backgroundPosition","backgroundRepeat","ref","ForwardRef","forwardRef","Center","styled","Connector","Connectors","tryToSetConnector","setConnector","setError","suppressAndThrowErrors","err","Web3Manager","active","error","window","ethereum","web3","isMobile","Web3","getAccounts","accounts","code","errorCodes","UNSUPPORTED_NETWORK","NetworkOnlyConnector","kwargs","providerURL","rest","engine","provider","net","getId","currentProvider","InjectedConnector","args","runOnDeactivation","networkChangedHandler","bind","accountsChangedHandler","isMetaMask","autoRefreshOnNetworkChange","enable","deniedAccessError","ETHEREUM_ACCESS_DENIED","push","removeListener","console","warn","noWeb3Error","NO_WEB3","account","unlockRequiredError","UNLOCK_REQUIRED","runner","networkIdNumber","Number","updateNetworkId","updateAccount","ErrorCodeMixin","GlobalStyle","createGlobalStyle","theme","textColor","backgroundColor","black","white","loblollyGray","CharcoalGray","codGray","neonGreen","eucalyptusGreen","vahallaBlue","mirageBlue","ThemeProvider","Home","lazy","Fund","Router","fallback","exact","strict","component","to","Network","process","supportedNetworks","connectors","Injected","ContextProviders","Updaters","App","libraryName","web3Api","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.508a9c6c.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useMemo,\n  useCallback,\n  useEffect,\n} from 'react'\nimport { useWeb3Context } from 'web3-react'\nimport { safeAccess } from '../utils'\n\nconst BLOCK_NUMBER = 'BLOCK_NUMBER'\nconst UPDATE_BLOCK_NUMBER = 'UPDATE_BLOCK_NUMBER'\n\nconst applicationContext = createContext()\n\nfunction useApplicationContext() {\n  return useContext(applicationContext)\n}\n\nconst initialState = {\n  [BLOCK_NUMBER]: {},\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_BLOCK_NUMBER: {\n      const { networkId, blockNumber } = payload\n      return {\n        ...state,\n        [BLOCK_NUMBER]: {\n          ...(safeAccess(state, [BLOCK_NUMBER]) || {}),\n          [networkId]: blockNumber,\n        },\n      }\n    }\n    default: {\n      throw new Error(\n        `Unexpected action type in ApplicationContext reducer: '${type}'.`,\n      )\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const updateBlockNumber = useCallback((networkId, blockNumber) => {\n    dispatch({ type: UPDATE_BLOCK_NUMBER, payload: { networkId, blockNumber } })\n  }, [])\n\n  const value = useMemo(() => [state, { updateBlockNumber }], [\n    state,\n    updateBlockNumber,\n  ])\n\n  return (\n    <applicationContext.Provider value={value}>\n      {children}\n    </applicationContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const { networkId, library } = useWeb3Context()\n  const [, { updateBlockNumber }] = useApplicationContext()\n\n  useEffect(() => {\n    if (library) {\n      let stale = false\n      function update() {\n        library.eth\n          .getBlockNumber()\n          .then(blockNumber => {\n            if (!stale) {\n              updateBlockNumber(networkId, blockNumber)\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              updateBlockNumber(networkId, null)\n            }\n          })\n      }\n\n      update()\n      const subscription = library.eth.subscribe('newBlockHeaders')\n      subscription.on('data', update)\n\n      return () => {\n        stale = true\n        subscription.unsubscribe()\n      }\n    }\n  }, [networkId, library, updateBlockNumber])\n\n  return null\n}\n\nexport function useBlockNumber() {\n  const { networkId } = useWeb3Context()\n\n  const [state] = useApplicationContext()\n\n  return safeAccess(state, [BLOCK_NUMBER, networkId])\n}\n","import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useMemo,\n  useCallback,\n  useEffect,\n} from 'react'\nimport { useWeb3Context } from 'web3-react'\nimport { safeAccess } from '../utils'\nimport { useBlockNumber } from './application'\n\nconst RESPONSE = 'response'\nconst CUSTOM_DATA = 'CUSTOM_DATA'\nconst BLOCK_NUMBER_CHECKED = 'BLOCK_NUMBER_CHECKED'\nconst RECEIPT = 'receipt'\n\nconst ADD = 'ADD'\nconst CHECK = 'CHECK'\nconst FINALIZE = 'FINALIZE'\n\nconst TransactionsContext = createContext()\n\nexport function useTransactionsContext() {\n  return useContext(TransactionsContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ADD: {\n      const { networkId, hash, response } = payload\n\n      if (safeAccess(state, [networkId, hash]) !== null) {\n        throw Error('Attempted to add existing transaction.')\n      }\n\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [hash]: {\n            [RESPONSE]: response,\n          },\n        },\n      }\n    }\n    case CHECK: {\n      const { networkId, hash, blockNumber } = payload\n\n      if (safeAccess(state, [networkId, hash]) === null) {\n        throw Error('Attempted to check non-existent transaction.')\n      }\n\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [hash]: {\n            ...(safeAccess(state, [networkId, hash]) || {}),\n            [BLOCK_NUMBER_CHECKED]: blockNumber,\n          },\n        },\n      }\n    }\n    case FINALIZE: {\n      const { networkId, hash, receipt } = payload\n\n      if (safeAccess(state, [networkId, hash]) === null) {\n        throw Error('Attempted to finalize non-existent transaction.')\n      }\n\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [hash]: {\n            ...(safeAccess(state, [networkId, hash]) || {}),\n            [RECEIPT]: receipt,\n          },\n        },\n      }\n    }\n    default: {\n      throw Error(\n        `Unexpected action type in TransactionsContext reducer: '${type}'.`,\n      )\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  const add = useCallback((networkId, hash, response) => {\n    dispatch({ type: ADD, payload: { networkId, hash, response } })\n  }, [])\n  const check = useCallback((networkId, hash, blockNumber) => {\n    dispatch({ type: CHECK, payload: { networkId, hash, blockNumber } })\n  }, [])\n  const finalize = useCallback((networkId, hash, receipt) => {\n    dispatch({ type: FINALIZE, payload: { networkId, hash, receipt } })\n  }, [])\n\n  const value = useMemo(() => [state, { add, check, finalize }], [\n    state,\n    add,\n    check,\n    finalize,\n  ])\n\n  return (\n    <TransactionsContext.Provider value={value}>\n      {children}\n    </TransactionsContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const { networkId, library } = useWeb3Context()\n\n  const globalBlockNumber = useBlockNumber()\n\n  const [state, { check, finalize }] = useTransactionsContext()\n  const allTransactions = safeAccess(state, [networkId]) || {}\n\n  useEffect(() => {\n    if ((networkId || networkId === 0) && library) {\n      let stale = false\n      Object.keys(allTransactions)\n        .filter(\n          hash =>\n            !allTransactions[hash][RECEIPT] &&\n            allTransactions[hash][BLOCK_NUMBER_CHECKED] !== globalBlockNumber,\n        )\n        .forEach(hash => {\n          library.eth\n            .getTransactionReceipt(hash)\n            .then(receipt => {\n              if (!stale) {\n                if (!receipt) {\n                  check(networkId, hash, globalBlockNumber)\n                } else {\n                  finalize(networkId, hash, receipt)\n                }\n              }\n            })\n            .catch(() => {\n              check(networkId, hash, globalBlockNumber)\n            })\n        })\n\n      return () => {\n        stale = true\n      }\n    }\n  }, [networkId, library, allTransactions, globalBlockNumber, check, finalize])\n\n  return null\n}\n\nexport function useTransactionAdder() {\n  const { networkId } = useWeb3Context()\n\n  const [, { add }] = useTransactionsContext()\n\n  return useCallback(\n    (hash, customData = {}) => {\n      if (!(networkId || networkId === 0)) {\n        throw Error(`Invalid networkId '${networkId}`)\n      }\n\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      add(networkId, hash, { [CUSTOM_DATA]: customData })\n    },\n    [networkId, add],\n  )\n}\n\nexport function useAllTransactions() {\n  const { networkId } = useWeb3Context()\n\n  const [state] = useTransactionsContext()\n\n  return safeAccess(state, [networkId]) || {}\n}\n\nexport function usePendingApproval(tokenAddress) {\n  const allTransactions = useAllTransactions()\n\n  return (\n    Object.keys(allTransactions).filter(hash => {\n      if (allTransactions[hash][RECEIPT]) {\n        return false\n      } else if (!allTransactions[hash][RESPONSE]) {\n        return false\n      } else if (\n        allTransactions[hash][RESPONSE][CUSTOM_DATA].approval !== tokenAddress\n      ) {\n        return false\n      } else {\n        return true\n      }\n    }).length >= 1\n  )\n}\n","import BigNumber from 'bignumber.js'\n\nexport async function getGasPrice(category = 'fast') {\n  const response = await fetch('https://ethgasstation.info/json/ethgasAPI.json')\n  const data = await response.json()\n  const gasPrice = new BigNumber(data[category]).div(10).times(1e9) // convert unit to wei\n  return gasPrice\n}\n\nexport async function getPriceConvertionRate(symbol, convert) {\n  const response = await fetch(\n    `https://cmc-proxy.pelith.cf/?symbol=${symbol}&convert=${convert}`,\n  )\n  const data = await response.json()\n  const price = new BigNumber(data.data.quote[convert].price)\n  return price\n}\n","import * as web3Utils from 'web3-utils'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\n\nexport { getGasPrice, getPriceConvertionRate } from './apis'\n\nexport function safeAccess(object, path) {\n  return object\n    ? path.reduce(\n        (accumulator, currentValue) =>\n          accumulator && accumulator[currentValue]\n            ? accumulator[currentValue]\n            : null,\n        object,\n      )\n    : null\n}\n\nexport function isAddress(address) {\n  return web3Utils.isAddress(address)\n}\n\nexport function shortenAddress(address, digits = 4) {\n  if (!isAddress(address)) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${address.substring(0, digits + 2)}...${address.substring(\n    42 - digits,\n  )}`\n}\n\nexport function getContract(address, abi, library, from) {\n  if (!isAddress(address) || address === ethers.constants.AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new library.eth.Contract(abi, address, { from })\n}\n\nexport function amountFormatter(amount, baseDecimals, displayDecimals = 4) {\n  if (\n    baseDecimals > 18 ||\n    displayDecimals > 18 ||\n    displayDecimals > baseDecimals\n  ) {\n    throw Error(\n      `Invalid combination of baseDecimals '${baseDecimals}' and displayDecimals '${displayDecimals}.`,\n    )\n  }\n\n  if (!amount) {\n    return undefined\n  }\n\n  if (!BigNumber.isBigNumber(amount)) {\n    amount = new BigNumber(amount)\n  }\n\n  if (amount.isZero()) {\n    return '0'\n  }\n\n  return amount\n    .div(new BigNumber(10).pow(new BigNumber(baseDecimals)))\n    .toFixed(displayDecimals)\n}\n\nexport function dateFormatter(timestamp) {\n  return new Date(timestamp).toLocaleString(undefined, { hour12: false })\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 50,\n  cy: 50,\n  \"ng-attr-r\": \"{{config.radius}}\",\n  \"ng-attr-stroke-width\": \"{{config.width}}\",\n  \"ng-attr-stroke\": \"{{config.stroke}}\",\n  \"ng-attr-stroke-dasharray\": \"{{config.dasharray}}\",\n  fill: \"none\",\n  strokeLinecap: \"round\",\n  r: 40,\n  strokeWidth: 8,\n  stroke: \"#00ff8c\",\n  strokeDasharray: \"62.83185307179586 62.83185307179586\"\n}, React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  calcMode: \"linear\",\n  values: \"0 50 50;360 50 50\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  begin: \"0s\",\n  repeatCount: \"indefinite\"\n}));\n\nvar SvgLoading = function SvgLoading(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    className: \"lds-dual-ring\",\n    style: {\n      backgroundImage: \"none\",\n      backgroundPosition: \"initial initial\",\n      backgroundRepeat: \"initial initial\"\n    },\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLoading, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loading.0a5b6ddc.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useWeb3Context, Connectors } from 'web3-react'\nimport Web3 from 'web3'\nimport styled from 'styled-components'\nimport { ReactComponent as Loading } from '../assets/loading.svg'\n\nconst Center = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst { Connector } = Connectors\n\nfunction tryToSetConnector(setConnector, setError) {\n  setConnector('Injected', { suppressAndThrowErrors: true }).catch(() => {\n    setConnector('Network', { suppressAndThrowErrors: true }).catch(err => {\n      setError(err)\n    })\n  })\n}\n\nexport default function Web3Manager({ children }) {\n  const { active, error, setConnector, setError } = useWeb3Context()\n\n  useEffect(() => {\n    if (!active && !error) {\n      if (window.ethereum || window.web3) {\n        if (isMobile) {\n          tryToSetConnector(setConnector, setError)\n        } else {\n          const web3 = new Web3(window.ethereum)\n          web3.eth.getAccounts(accounts => {\n            if (accounts.length > 0) {\n              tryToSetConnector(setConnector, setError)\n            } else {\n              setConnector('Network', { suppressAndThrowErrors: true }).catch(\n                err => {\n                  setError(err)\n                },\n              )\n            }\n          })\n        }\n      } else {\n        setConnector('Network', { suppressAndThrowErrors: true }).catch(err => {\n          setError(err)\n        })\n      }\n    }\n  }, [active, error, setConnector, setError])\n\n  useEffect(() => {\n    if (error) {\n      if (error.code === Connector.errorCodes.UNSUPPORTED_NETWORK) {\n        setConnector('Network', { suppressAndThrowErrors: true }).catch(err => {\n          setError(err)\n        })\n      }\n    }\n  })\n\n  if (!active && !error) {\n    return (\n      <Center>\n        <Loading />\n      </Center>\n    )\n  } else if (error) {\n    return <div>Unknown Error</div>\n  } else {\n    return children\n  }\n}\n","import Web3 from 'web3'\nimport { Connectors } from 'web3-react'\n\nconst { Connector } = Connectors\n\nexport default class NetworkOnlyConnector extends Connector {\n  constructor(kwargs) {\n    const { providerURL, ...rest } = kwargs || {}\n    super(rest)\n    this.providerURL = providerURL\n  }\n\n  async onActivation() {\n    if (!this.engine) {\n      const web3 = new Web3(this.providerURL)\n      this.engine = web3\n    }\n  }\n\n  async getNetworkId(provider) {\n    const web3 = new Web3(provider)\n    const networkId = await web3.eth.net.getId()\n    return super._validateNetworkId(networkId)\n  }\n\n  async getProvider() {\n    return this.engine.currentProvider\n  }\n\n  async getAccount() {\n    return null\n  }\n}\n","import { Connectors } from 'web3-react'\nconst { Connector, ErrorCodeMixin } = Connectors\n\nconst InjectedConnectorErrorCodes = [\n  'ETHEREUM_ACCESS_DENIED',\n  'NO_WEB3',\n  'UNLOCK_REQUIRED',\n]\nexport default class InjectedConnector extends ErrorCodeMixin(\n  Connector,\n  InjectedConnectorErrorCodes,\n) {\n  constructor(args = {}) {\n    super(args)\n    this.runOnDeactivation = []\n\n    this.networkChangedHandler = this.networkChangedHandler.bind(this)\n    this.accountsChangedHandler = this.accountsChangedHandler.bind(this)\n\n    const { ethereum } = window\n    if (ethereum && ethereum.isMetaMask) {\n      ethereum.autoRefreshOnNetworkChange = false\n    }\n  }\n\n  async onActivation() {\n    const { ethereum, web3 } = window\n\n    if (ethereum) {\n      await ethereum.enable().catch(error => {\n        const deniedAccessError = Error(error)\n        deniedAccessError.code =\n          InjectedConnector.errorCodes.ETHEREUM_ACCESS_DENIED\n        throw deniedAccessError\n      })\n\n      // initialize event listeners\n      if (ethereum.on) {\n        ethereum.on('networkChanged', this.networkChangedHandler)\n        ethereum.on('accountsChanged', this.accountsChangedHandler)\n\n        this.runOnDeactivation.push(() => {\n          if (ethereum.removeListener) {\n            ethereum.removeListener(\n              'networkChanged',\n              this.networkChangedHandler,\n            )\n            ethereum.removeListener(\n              'accountsChanged',\n              this.accountsChangedHandler,\n            )\n          }\n        })\n      }\n    } else if (web3) {\n      console.warn(\n        'Your web3 provider is outdated, please upgrade to a modern provider.',\n      )\n    } else {\n      const noWeb3Error = Error(\n        'Your browser is not equipped with web3 capabilities.',\n      )\n      noWeb3Error.code = InjectedConnector.errorCodes.NO_WEB3\n      throw noWeb3Error\n    }\n  }\n\n  async getProvider() {\n    const { ethereum, web3 } = window\n    return ethereum || web3.currentProvider\n  }\n\n  async getAccount(provider) {\n    const account = await super.getAccount(provider)\n\n    if (account === null) {\n      const unlockRequiredError = Error('Ethereum account locked.')\n      unlockRequiredError.code = InjectedConnector.errorCodes.UNLOCK_REQUIRED\n      throw unlockRequiredError\n    }\n\n    return account\n  }\n\n  onDeactivation() {\n    this.runOnDeactivation.forEach(runner => runner())\n    this.runOnDeactivation = []\n  }\n\n  // event handlers\n  networkChangedHandler(networkId) {\n    const networkIdNumber = Number(networkId)\n\n    try {\n      super._validateNetworkId(networkIdNumber)\n\n      super._web3ReactUpdateHandler({\n        updateNetworkId: true,\n        networkId: networkIdNumber,\n      })\n    } catch (error) {\n      super._web3ReactErrorHandler(error)\n    }\n  }\n\n  accountsChangedHandler(accounts) {\n    if (!accounts[0]) {\n      const unlockRequiredError = Error('Ethereum account locked.')\n      unlockRequiredError.code = InjectedConnector.errorCodes.UNLOCK_REQUIRED\n      super._web3ReactErrorHandler(unlockRequiredError)\n    } else {\n      super._web3ReactUpdateHandler({\n        updateAccount: true,\n        account: accounts[0],\n      })\n    }\n  }\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;    \n  }\n\n  body > div {\n    height: 100%;\n    overflow: scroll;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  html {\n    font-size: 16px;\n    font-family: 'Roboto', sans-serif;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n\n  input[type=\"number\"]::-webkit-outer-spin-button,\n  input[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  input[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n`\n","import React from 'react'\nimport { ThemeProvider as StyledComponentsThemeProvider } from 'styled-components'\n\nexport { GlobalStyle } from './GlobalStyle'\n\nconst black = '#000000'\nconst white = '#FFFFFF'\n\nconst theme = {\n  black,\n  white,\n  textColor: white,\n  backgroundColor: '#2A283E',\n  loblollyGray: '#B8B8B8',\n  CharcoalGray: '#454545',\n  codGray: '#0B0D0A',\n  neonGreen: '#00FE8C',\n  eucalyptusGreen: '#218C5C',\n  vahallaBlue: '#2A283E',\n  mirageBlue: '#1C1A29',\n}\n\nexport default function ThemeProvider({ children }) {\n  return (\n    <StyledComponentsThemeProvider theme={theme}>\n      {children}\n    </StyledComponentsThemeProvider>\n  )\n}\n","import React, { Suspense, lazy } from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nconst Home = lazy(() => import('./pages/Home'))\nconst Fund = lazy(() => import('./pages/Fund'))\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <Suspense fallback={null}>\n        <Switch>\n          <Route exact strict path='/' component={Home} />\n          <Route path='/fund' component={Fund} />\n          <Redirect to='/' />\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  )\n}\n","import React from 'react'\nimport Web3Provider from 'web3-react'\nimport Web3 from 'web3'\nimport ApplicationContextProvider, {\n  Updater as ApplicationContextUpdater,\n} from './contexts/application'\nimport TransactionContextProvider, {\n  Updater as TransactionContextUpdater,\n} from './contexts/transaction'\nimport Web3Manager from './components/Web3Manager'\nimport NetworkOnlyConnector from './connectors/NetworkOnlyConnector'\nimport InjectedConnector from './connectors/InjectedConnector'\nimport ThemeProvider, { GlobalStyle } from './themes'\nimport Router from './Router'\n\nconst Network = new NetworkOnlyConnector({\n  providerURL: process.env.REACT_APP_NETWORK_URL || '',\n  supportedNetworks: [Number(process.env.REACT_APP_NETWORK_ID || '1')],\n})\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [Number(process.env.REACT_APP_NETWORK_ID || '1')],\n})\n\nconst connectors = { Injected, Network }\n\nfunction ContextProviders({ children }) {\n  return (\n    <ApplicationContextProvider>\n      <TransactionContextProvider>{children}</TransactionContextProvider>\n    </ApplicationContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <ApplicationContextUpdater />\n      <TransactionContextUpdater />\n    </>\n  )\n}\n\nfunction App() {\n  return (\n    <Web3Provider connectors={connectors} libraryName='web3.js' web3Api={Web3}>\n      <ContextProviders>\n        <Updaters />\n        <ThemeProvider>\n          <GlobalStyle />\n          <Web3Manager>\n            <Router />\n          </Web3Manager>\n        </ThemeProvider>\n      </ContextProviders>\n    </Web3Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}