{"version":3,"sources":["components/Web3Status.js","components/Header.js","components/NavigationTabs.js","pages/Fund/index.js","themes/typography.js","components/Footer.js"],"names":["Connector","Connectors","AddressWrapper","styled","div","theme","eucalyptusGreen","mirageBlue","textColor","ConnectButton","button","Web3Status","useWeb3Context","account","connectorName","setConnector","useState","error","setError","useEffect","ethereum","window","accountPoll","setInterval","ethers","providers","Web3Provider","listAccounts","then","accounts","length","clearInterval","on","removeListener","tryToActivateInjected","suppressAndThrowErrors","catch","code","errorCodes","UNSUPPORTED_NETWORK","shortenAddress","onClick","web3","err","HeaderWrapper","header","LogoLink","Link","neonGreen","Header","to","Container","NavWrapper","StyledNavLink","NavLink","attrs","activeClassName","loblollyGray","codGray","NavigationTabs","url","useRouteMatch","TargetReturn","lazy","RiskReturn","AppWrapper","Space","Fund","path","fallback","component","Footer","Headline","Title","props","center","SubTitle","Text","span","SubText","Bold","Strong","Underline","StrongText","FooterBackground","footer","FooterContainer"],"mappings":"ulCAMQA,EAAcC,aAAdD,UAEFE,EAAiBC,IAAOC,IAAV,KAGE,qBAAGC,MAAkBC,mBAErB,qBAAGD,MAAkBE,cAChC,qBAAGF,MAAkBG,aAc1BC,EAAgBN,IAAOO,OAAV,KAKG,qBAAGL,MAAkBC,mBAChC,qBAAGD,MAAkBG,aAejB,SAASG,IAAc,IAAD,EACcC,2BAAzCC,EAD2B,EAC3BA,QAASC,EADkB,EAClBA,cAAeC,EADG,EACHA,aADG,EAGTC,qBAHS,mBAG5BC,EAH4B,KAGrBC,EAHqB,KAMnCC,qBAAU,WAAO,IACPC,EAAaC,OAAbD,SACR,GAAsB,aAAlBN,GAEF,GAAIM,EAAU,CACZ,IAAME,EAAcC,aAAY,WACd,IAAIC,SAAOC,UAAUC,aAAaN,GAC1CO,eAAeC,MAAK,SAAAC,GACF,IAApBA,EAASC,QACXf,EAAa,gBAGhB,KAEH,OAAO,WACLgB,cAAcT,UAIlB,GACoB,YAAlBR,GACAM,GACAA,EAASY,IACTZ,EAASa,eACT,CAAC,IACQC,EAAT,WACkB,IAAIV,SAAOC,UAAUC,aAAaL,OAAOD,UACjDO,eAAeC,MAAK,SAAAC,GACtBA,EAASC,QAAU,GACrBf,EAAa,WAAY,CAAEoB,wBAAwB,IAChDP,MAAK,WACJV,OAEDkB,OAAM,SAAAnB,GAEDA,EAAMoB,OAASrC,EAAUsC,WAAWC,qBACtCrB,EAASD,UAUrB,OAHAG,EAASY,GAAG,iBAAkBE,GAC9Bd,EAASY,GAAG,kBAAmBE,GAExB,WACDd,EAASa,iBACXb,EAASa,eAAe,iBAAkBC,GAC1Cd,EAASa,eAAe,kBAAmBC,SAiBrD,OAAIjB,EACK,8CACGJ,EAGH,kBAACX,EAAD,KAAiBsC,YAAe3B,IAFhC,kBAACJ,EAAD,CAAegC,QAbR,WACQ,YAAlB3B,IAAgCO,OAAOD,UAAYC,OAAOqB,OAC5D3B,EAAa,WAAY,CAAEoB,wBAAwB,IAAQC,OAAM,SAAAO,GAC3DA,EAAIN,OAASrC,EAAUsC,WAAWC,qBACpCrB,EAASyB,QASR,W,qhBCvHX,IAAMC,EAAgBzC,IAAO0C,OAAV,KAYbC,EAAW3C,YAAO4C,IAAP5C,CAAH,KAKH,qBAAGE,MAAkB2C,aAQjB,SAASC,IACtB,OACE,kBAACL,EAAD,KACE,kBAACE,EAAD,CAAUI,GAAG,KAAb,mBACA,kBAACvC,EAAD,O,wvBC9BN,IAAMwC,EAAYhD,IAAOC,IAAV,KAKTgD,EAAajD,IAAOC,IAAV,KAQViD,EAAgBlD,YAAOmD,KAASC,MAAM,CAAEC,gBAFtB,UAEFrD,CAAH,KAQR,qBAAGE,MAAkBoD,gBACH,qBAAGpD,MAAkBqD,UAX1B,UAgBA,qBAAGrD,MAAkBE,cAChC,qBAAGF,MAAkB2C,aACH,qBAAG3C,MAAkB2C,aAQrC,SAASW,IAAkB,IAChCC,EAAQC,cAARD,IACR,OACE,kBAACT,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAeH,GAAE,UAAKU,EAAL,mBAAjB,mBAGA,kBAACP,EAAD,CAAeH,GAAE,UAAKU,EAAL,iBAAjB,mB,sWC1CR,IAAME,EAAeC,gBAAK,kBAAM,+DAC1BC,EAAaD,gBAAK,kBAAM,+DAExBE,EAAa9D,IAAOC,IAAV,KAQV8D,EAAQ/D,IAAOC,IAAV,KAMI,SAAS+D,IAAQ,IACtBC,EAASP,cAATO,KAER,OACE,kBAACH,EAAD,KACE,kBAAChB,EAAD,MACA,kBAACU,EAAD,MACA,kBAAC,WAAD,CAAUU,SAAU,MAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,KAAI,UAAKA,EAAL,kBAA2BE,UAAWR,IACjD,kBAAC,IAAD,CAAOM,KAAI,UAAKA,EAAL,gBAAyBE,UAAWN,IAC/C,kBAAC,IAAD,CAAUd,GAAE,UAAKkB,EAAL,sBAGhB,kBAACF,EAAD,MACA,kBAACK,EAAA,EAAD,S,+9DCrCC,IAAMC,EAAWrE,IAAOC,IAAV,KASRqE,EAAQtE,IAAOC,IAAV,KAGF,SAAAsE,GAAK,OAAKA,EAAMC,OAAS,SAAW,UAOvCC,EAAWzE,IAAOC,IAAV,KAURyE,EAAO1E,IAAO2E,KAAV,KASJC,EAAU5E,IAAO2E,KAAV,KASPE,EAAO7E,IAAO2E,KAAV,KAIJG,EAAS9E,IAAO2E,KAAV,KACR,qBAAGzE,MAAkB2C,aAGnBkC,EAAY/E,IAAO2E,KAAV,KAWE,qBAAGzE,MAAkB2C,aAIhCmC,EAAahF,IAAOC,IAAV,KAGZ,qBAAGC,MAAkB2C,c,scCvEhC,IAAMoC,EAAmBjF,IAAOkF,OAAV,KAGA,qBAAGhF,MAAkBE,cAGrC+E,EAAkBnF,IAAOC,IAAV,KAWN,SAASmE,IACtB,OACE,kBAACa,EAAD,KACE,kBAACE,EAAD,KACE,kBAAC,IAAD,mBACA,kBAAC,IAAD,kGAIA,kBAAC,IAAD,uDACA,kBAAC,IAAD","file":"static/js/6.38caf970.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useWeb3Context, Connectors } from 'web3-react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { shortenAddress } from '../utils'\n\nconst { Connector } = Connectors\n\nconst AddressWrapper = styled.div`\n  width: 8rem;\n  height: 2.5rem;\n  border: 2px solid ${({ theme }) => theme.eucalyptusGreen};\n  border-radius: 0.5rem;\n  background-color: ${({ theme }) => theme.mirageBlue};\n  color: ${({ theme }) => theme.textColor};\n  font-size: 1rem;\n  font-weight: 400;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 600px) {\n    width: 10rem;\n    height: 3rem;\n    font-size: 1.25rem;\n  }\n`\n\nconst ConnectButton = styled.button`\n  width: 8rem;\n  height: 2.5rem;\n  border: none;\n  border-radius: 0.5rem;\n  background-color: ${({ theme }) => theme.eucalyptusGreen};\n  color: ${({ theme }) => theme.textColor};\n  font-size: 1rem;\n  font-weight: 400;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  @media screen and (min-width: 600px) {\n    width: 10rem;\n    height: 3rem;\n    font-size: 1.25rem;\n  }\n`\n\nexport default function Web3Status() {\n  const { account, connectorName, setConnector } = useWeb3Context()\n\n  const [error, setError] = useState()\n\n  // logic to detect log{ins,outs}...\n  useEffect(() => {\n    const { ethereum } = window\n    if (connectorName === 'Injected') {\n      // ...poll to check the accounts array, and if it's ever 0 i.e. the user logged out, update the connector\n      if (ethereum) {\n        const accountPoll = setInterval(() => {\n          const library = new ethers.providers.Web3Provider(ethereum)\n          library.listAccounts().then(accounts => {\n            if (accounts.length === 0) {\n              setConnector('Network')\n            }\n          })\n        }, 750)\n\n        return () => {\n          clearInterval(accountPoll)\n        }\n      }\n    } else {\n      if (\n        connectorName === 'Network' &&\n        ethereum &&\n        ethereum.on &&\n        ethereum.removeListener\n      ) {\n        function tryToActivateInjected() {\n          const library = new ethers.providers.Web3Provider(window.ethereum)\n          library.listAccounts().then(accounts => {\n            if (accounts.length >= 1) {\n              setConnector('Injected', { suppressAndThrowErrors: true })\n                .then(() => {\n                  setError()\n                })\n                .catch(error => {\n                  // ...and if the error is that they're on the wrong network, display it, otherwise eat it\n                  if (error.code === Connector.errorCodes.UNSUPPORTED_NETWORK) {\n                    setError(error)\n                  }\n                })\n            }\n          })\n        }\n\n        ethereum.on('networkChanged', tryToActivateInjected)\n        ethereum.on('accountsChanged', tryToActivateInjected)\n\n        return () => {\n          if (ethereum.removeListener) {\n            ethereum.removeListener('networkChanged', tryToActivateInjected)\n            ethereum.removeListener('accountsChanged', tryToActivateInjected)\n          }\n        }\n      }\n    }\n  })\n\n  const onClick = () => {\n    if (connectorName === 'Network' && (window.ethereum || window.web3)) {\n      setConnector('Injected', { suppressAndThrowErrors: true }).catch(err => {\n        if (err.code === Connector.errorCodes.UNSUPPORTED_NETWORK) {\n          setError(err)\n        }\n      })\n    }\n  }\n\n  if (error) {\n    return <div>Wrong Network</div>\n  } else if (!account) {\n    return <ConnectButton onClick={onClick}>Connect</ConnectButton>\n  } else {\n    return <AddressWrapper>{shortenAddress(account)}</AddressWrapper>\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Web3Status from './Web3Status'\n\nconst HeaderWrapper = styled.header`\n  width: 100%;\n  padding: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 600px) {\n    padding: 1.5rem 3rem;\n  }\n`\n\nconst LogoLink = styled(Link)`\n  font-size: 1.25rem;\n  font-weight: 500;\n  letter-spacing: 1px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.neonGreen};\n  cursor: pointer;\n\n  @media screen and (min-width: 600px) {\n    font-size: 1.5rem;\n  }\n`\n\nexport default function Header() {\n  return (\n    <HeaderWrapper>\n      <LogoLink to='/'>Structured Fund</LogoLink>\n      <Web3Status />\n    </HeaderWrapper>\n  )\n}\n","import React from 'react'\nimport { NavLink, useRouteMatch } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 42.5rem;\n`\n\nconst NavWrapper = styled.div`\n  height: 3rem;\n  display: flex;\n  align-items: center;\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({ activeClassName })`\n  height: 3rem;\n  flex: 1;\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: center;\n  text-decoration: none;\n  line-height: 3rem;\n  color: ${({ theme }) => theme.loblollyGray};\n  border-bottom: 2px solid ${({ theme }) => theme.codGray};\n\n  &.${activeClassName} {\n    border-top-left-radius: 0.5rem;\n    border-top-right-radius: 0.5rem;\n    background-color: ${({ theme }) => theme.mirageBlue};\n    color: ${({ theme }) => theme.neonGreen};\n    border-bottom: 2px solid ${({ theme }) => theme.neonGreen};\n  }\n\n  @media screen and (min-width: 600px) {\n    font-size: 1.25rem;\n  }\n`\n\nexport default function NavigationTabs() {\n  const { url } = useRouteMatch()\n  return (\n    <Container>\n      <NavWrapper>\n        <StyledNavLink to={`${url}/target-return`}>\n          Preferred Share\n        </StyledNavLink>\n        <StyledNavLink to={`${url}/risk-return`}>Excess Return</StyledNavLink>\n      </NavWrapper>\n    </Container>\n  )\n}\n","import React, { Suspense, lazy } from 'react'\nimport { Switch, Route, Redirect, useRouteMatch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Header from '../../components/Header'\nimport Footer from '../../components/Footer'\nimport NavigationTabs from '../../components/NavigationTabs'\n\nconst TargetReturn = lazy(() => import('./TargetReturn'))\nconst RiskReturn = lazy(() => import('./RiskReturn'))\n\nconst AppWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Space = styled.div`\n  margin-top: 4rem;\n  width: 100vw;\n  background-color: transparent;\n`\n\nexport default function Fund() {\n  const { path } = useRouteMatch()\n\n  return (\n    <AppWrapper>\n      <Header />\n      <NavigationTabs />\n      <Suspense fallback={null}>\n        <Switch>\n          <Route path={`${path}/target-return`} component={TargetReturn} />\n          <Route path={`${path}/risk-return`} component={RiskReturn} />\n          <Redirect to={`${path}/target-return`} />\n        </Switch>\n      </Suspense>\n      <Space />\n      <Footer />\n    </AppWrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Headline = styled.div`\n  font-size: 1.25rem;\n  font-weight: 500;\n\n  @media screen and (min-width: 600px) {\n    font-size: 1.5rem;\n  }\n`\n\nexport const Title = styled.div`\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: ${props => (props.center ? 'center' : 'left')};\n\n  @media screen and (min-width: 600px) {\n    font-size: 1.25rem;\n  }\n`\n\nexport const SubTitle = styled.div`\n  font-size: 0.75rem;\n  font-weight: 400;\n  align-self: flex-end;\n\n  @media screen and (min-width: 600px) {\n    font-size: 1rem;\n  }\n`\n\nexport const Text = styled.span`\n  font-size: 0.75rem;\n  font-weight: 400;\n\n  @media screen and (min-width: 600px) {\n    font-size: 1rem;\n  }\n`\n\nexport const SubText = styled.span`\n  font-size: 0.5rem;\n  font-weight: 400;\n\n  @media screen and (min-width: 600px) {\n    font-size: 0.75rem;\n  }\n`\n\nexport const Bold = styled.span`\n  font-weight: 600;\n`\n\nexport const Strong = styled.span`\n  color: ${({ theme }) => theme.neonGreen};\n`\n\nexport const Underline = styled.span`\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: -2px;\n    bottom: -2px;\n    width: calc(100% + 4px);\n    height: 2px;\n    border-radius: 1px;\n    background-color: ${({ theme }) => theme.neonGreen};\n  }\n`\n\nexport const StrongText = styled.div`\n  font-size: 1.25rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.neonGreen};\n\n  @media screen and (min-width: 600px) {\n    font-size: 1.5rem;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Title, SubText } from '../themes/typography'\n\nconst FooterBackground = styled.footer`\n  width: 100%;\n  padding: 1.5rem 0;\n  background-color: ${({ theme }) => theme.mirageBlue};\n`\n\nconst FooterContainer = styled.div`\n  max-width: 64rem;\n  width: 90%;\n  margin: 0 auto;\n\n  > *:not(:first-child) {\n    display: block;\n    margin-top: 0.5rem;\n  }\n`\n\nexport default function Footer() {\n  return (\n    <FooterBackground>\n      <FooterContainer>\n        <Title>Disclaimer</Title>\n        <SubText>\n          Structured Fund is not a licensed bank, broker-dealer, investment\n          advisor or an exchange.\n        </SubText>\n        <SubText>This Project is in beta. Use at your own risk.</SubText>\n        <SubText>\n          Structured Fund use Kyber Network to power its own service.\n        </SubText>\n      </FooterContainer>\n    </FooterBackground>\n  )\n}\n"],"sourceRoot":""}